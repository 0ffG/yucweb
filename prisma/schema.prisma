generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  donor
  school
}

enum DonationType {
  money
  goods
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  lastName  String
  email     String    @unique
  password  String
  role      Role
  totalMoneyDonated     Int      @default(0)
  totalSaplingsDonated  Int      @default(0)
  photo     String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  donations Donation[] @relation("DonorDonations")
  received  Donation[] @relation("SchoolDonations")
  inventories Inventory[]

  materialDonationsSent     MaterialDonation[] @relation("UserToMaterialDonation")
  materialDonationsReceived MaterialDonation[] @relation("SchoolToMaterialDonation")
}


model Donation {
  id           Int      @id @default(autoincrement())
  donorId      Int
  schoolId     Int
  amount       Float
  donationType DonationType
  description  String?
  createdAt    DateTime @default(now())

  donor  User @relation("DonorDonations", fields: [donorId], references: [id])
  school User @relation("SchoolDonations", fields: [schoolId], references: [id])
}

model Inventory {
  id        Int    @id @default(autoincrement())  // Inventory kaydı için kendi ID'si
  schoolId  Int                                   // Hangi okul (User) ile ilişkili
  item      String
  count     Int

  school    User   @relation(fields: [schoolId], references: [id])
}


model News {
  id         Int @id @default(autoincrement())   
  title      String
  image      String? 

}

model MaterialDonation {
  id        Int  @id @default(autoincrement())
  userId    Int
  schoolId  Int

  user      User @relation("UserToMaterialDonation", fields: [userId], references: [id])
  school    User @relation("SchoolToMaterialDonation", fields: [schoolId], references: [id])
}

