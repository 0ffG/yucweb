import { NextRequest, NextResponse } from 'next/server';
import prisma from '@/lib/prisma';
import { verifyToken } from '@/lib/auth'; // üîê JWT'den userId almak i√ßin

export async function POST(req: NextRequest) {
  const body = await req.json();
  const { amount } = body;

  if (!amount || amount <= 0) {
    return NextResponse.json({ error: "Ge√ßersiz baƒüƒ±≈ü miktarƒ±." }, { status: 400 });
  }

  const token = req.cookies.get("token")?.value;
  if (!token) {
    return NextResponse.json({ error: "Giri≈ü yapƒ±lmamƒ±≈ü." }, { status: 403 });
  }

  const payload = verifyToken(token);
  if (!payload || payload.role !== "donor") {
    return NextResponse.json({ error: "Yetkisiz eri≈üim." }, { status: 403 });
  }

  const userId = payload.userId;

  try {
    // Donor'un toplam baƒüƒ±≈ü miktarƒ±nƒ± artƒ±r
    await prisma.user.update({
      where: { id: userId },
      data: {
        totalMoneyDonated: {
          increment: amount,
        },
      },
    });

    return NextResponse.json({ message: "Para yardƒ±mƒ± ba≈üarƒ±yla i≈ülendi." });
  } catch (error) {
    console.error("Sunucu hatasƒ±:", error);
    return NextResponse.json({ error: "Sunucu hatasƒ±." }, { status: 500 });
  }
}
